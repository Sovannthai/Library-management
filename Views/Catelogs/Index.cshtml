@model IEnumerable<Library.Models.Catelog>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/AdminLTE/_Layout.cshtml";
}
<div class="row">
    <div class=col-sm-6>
         <h3 class="text-uppercase">List Catelog</h3>
    </div>
    <div class="col-sm-6">
        <a asp-action="Create" class="btn btn-primary btn-sm float-right"><i class="fas fa-plus-circle">Add New</i></a>    
    </div>
</div>
<div class="card">
    <div class="card-body">
        <table class="table table-bordered table-hover">
    <thead class="text-uppercase">
        <tr>
            <th class="text-white">
                        @Html.DisplayNameFor(model => model.CatalogCode)
            </th>
            <th class="text-white">
                        @Html.DisplayNameFor(model => model.CatalogName)
            </th>
            <th class="text-white">
                        @Html.DisplayNameFor(model => model.ISBN)
            </th>
            <th class="text-white">
                        @Html.DisplayNameFor(model => model.AuthorName)
            </th>
            <th class="text-white">
                        @Html.DisplayNameFor(model => model.Publisher)
            </th>
            <th class="text-white">
                        @Html.DisplayNameFor(model => model.PublicYear)
            </th>
            <th class="text-white">
                        @Html.DisplayNameFor(model => model.PublicEdition)
            </th>
            <th class="text-white">Action</th>
        </tr>
    </thead>
    <tbody>
                @foreach (var item in Model)
                {
                <tr>
                    <td>
                            @Html.DisplayFor(modelItem => item.CatalogCode)
                    </td>
                    <td>
                            @Html.DisplayFor(modelItem => item.CatalogName)
                    </td>
                    <td>
                            @Html.DisplayFor(modelItem => item.ISBN)
                    </td>
                    <td>
                            @Html.DisplayFor(modelItem => item.AuthorName)
                    </td>
                    <td>
                            @Html.DisplayFor(modelItem => item.Publisher)
                    </td>
                    <td>
                            @Html.DisplayFor(modelItem => item.PublicYear)
                    </td>
                    <td>
                            @Html.DisplayFor(modelItem => item.PublicEdition)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-success btn-edit btn-sm rounded-circle"><i class="fas fa-edit"></i></a>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm rounded-circle"><i class="fas fa-eye"></i></a>
                        <form asp-action="Delete" asp-route-id="@item.Id" class="d-inline-block delete-form">
                           <button type="submit" class="btn btn-danger btn-sm rounded-circle"><i class="fas fa-trash"></i></button>
                        </form>
                   </td>
                </tr>
                }
    </tbody>
</table>
    </div>
</div>
<script>
    // Function to handle form submission with SweetAlert
    function handleFormSubmission(event) {
        event.preventDefault(); // Prevent default form submission

        // Use SweetAlert to confirm deletion
        Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, delete it!"
        }).then((result) => {
            if (result.isConfirmed) {
                // If confirmed, submit the form
                event.target.submit();
            }
        });
    }

    // Add event listeners to all delete forms
    document.querySelectorAll('.delete-form').forEach(form => {
        form.addEventListener('submit', handleFormSubmission);
    });
</script>
