@model IEnumerable<Library.Models.Product>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/AdminLTE/_Layout.cshtml";
}
<div class="row">
<form action="" class="mb-2 col-6">
    <div class="row">
        <div class="form-group col-sm-8 ml-2">
        <label>Search Product</label>
            <input type="search" class="form-control" name="searchString" value="@ViewBag.SearchString" />
        </div>
        <div class="col-sm-1 float-right">
            <button type="submit" class="btn btn-success" style="margin-top:32px;">Search</button>
        </div>
    </div>
</form>
<form asp-action="Index" asp-controller="Products" method="get"class="col-6">
    <div class="row">
        <div class="form-group col-sm-8">
            <label for="categoryId">Select Category:</label>
            <select class="form-select"
                asp-items="@(new SelectList(ViewBag.Categories,"CategoryId","CategoryName",@ViewBag.CategoryId))"
                id="categoryId" name="categoryId">
                <option value="">All Categories</option>
            </select>
        </div>
        <div class="col-sm-3"​​ style="margin-top:31px;">
            <button type="submit" class="btn btn-primary">Filter</button>
        </div​​>
    </div>
</form>
</div>
<div class="card">
    <div class="card-header text-uppercase">Product List
    <a asp-action="Create" class="btn btn-primary btn-sm float-right"><i class="fas fa-plus-circle">Add New</i></a>    
    </div>
    <div class="card-body">
        @if (Model.Any())
        {
            <table class="table table-bordered table-hover">
                <thead>
                    <tr>
                        <th class="text-white">
                            @Html.DisplayNameFor(model => model.Name)
                        </th>
                        <th class="text-white">
                            @Html.DisplayNameFor(model => model.Description)
                        </th>
                        <th class="text-white">
                            @Html.DisplayNameFor(model => model.Quantity)
                        </th>
                        <th class="text-white">
                            @Html.DisplayNameFor(model => model.Price)
                        </th>
                        <th class="text-white">
                            @Html.DisplayNameFor(model => model.Discount)
                        </th>
                        <th class="text-white">
                            @Html.DisplayNameFor(model => model.Category)
                        </th>
                        <th class="text-white">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Quantity)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Price)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Discount)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Category.CategoryName)
                            </td>
                            <td>
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-success btn-edit btn-sm rounded-circle"><i class="fas fa-edit"></i></a>
                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm rounded-circle"><i class="fas fa-eye"></i></a>
                                <form asp-action="Delete" asp-route-id="@item.Id" class="d-inline-block delete-form">
                                    <button type="submit" class="btn btn-danger btn-sm rounded-circle"><i class="fas fa-trash"></i></button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <div>No records found.</div>
        }
    </div>
    </div>
</div>
<script>
    // Function to handle form submission with SweetAlert
    function handleFormSubmission(event) {
        event.preventDefault(); // Prevent default form submission

        // Use SweetAlert to confirm deletion
        Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, delete it!"
        }).then((result) => {
            if (result.isConfirmed) {
                // If confirmed, submit the form
                event.target.submit();
            }
        });
    }

    // Add event listeners to all delete forms
    document.querySelectorAll('.delete-form').forEach(form => {
        form.addEventListener('submit', handleFormSubmission);
    });
</script>
